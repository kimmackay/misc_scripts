#!/usr/bin/perl
## This script allows you to filter the output from ./combine_expressions_max_with_locations.pl based on fold-change
## argument 1: a text file containing the probe name, chromosome, start, stop, strand ID, treatment 1 foldchange, and treatment 2 foldchange (this is generated by ./combine_expressions_max_with)locations.pl)
## argument 2: a numeric value depicting which expression to filter (1 or 2)
## argument 3: lower threshold for the fold-change filtering
## argument 4: higher threshold for the fold-change filtering
## argument 5: name of the output file
##
## Kimberly MacKay June 26, 2014
## contact: kimberly.mackay@usask.ca
##
## license: This work is licensed under the Creative Commons Attribution-NonCommercial-
## ShareAlike 3.0 Unported License. To view a copy of this license, visit 
## http://creativecommons.org/licenses/by-nc-sa/3.0/ or send a letter to Creative Commons, 
## PO Box 1866, Mountain View, CA 94042, USA.

use strict;
use warnings;

## check to ensure five arguments were passed in
die "ERROR: must pass in five argumnets." if @ARGV != 5;

## get the input arguments
my $info_file = $ARGV[0];
my $filter_exp = $ARGV[1];
my $lower_threshold = $ARGV[2];
my $higher_threshold = $ARGV[3];
my $output_file = $ARGV[4];

## open the input file
open INFO_FILE, "$info_file" or die "ERROR: $info_file could not be opened.";
chomp(my @info_file = <INFO_FILE>);
close INFO_FILE;

## open the output file
open OUTFILE, ">$output_file" or die "ERROR: $output_file could not be opened.";
printf OUTFILE "%-15s %-10s %-15s %15s %10s %20s %20s", "probe", "chromosome", "start",  "stop", "strand", "ID", "Treatment $filter_exp Expression\n";

## define some variables
my ($probe_name, $chromosome, $start, $stop, $strand, $id, $T1_exp, $T2_exp);

## for each line in the input file
for(my $i =1; $i <= $#info_file; $i++)
{	
	## split the line into the relavent bits
	($probe_name, $chromosome, $start, $stop, $strand, $id, $T1_exp, $T2_exp) = split /\s+/, $info_file[$i];
	
	## gutcheck: ensure that the fold-change columns contains numerical digits
	if($T2_exp =~ /\d/)
	{
		## if we are filtering the first treatment
		if($filter_exp =~ /1/)
		{
			## if the fold-change for the first treatment is equal to or falls in between the user-provided thresholds
			if($T1_exp >= $lower_threshold && $T1_exp <= $higher_threshold)
			{
				## print the line to the output file
				printf OUTFILE "%-15s %-10s %-15s %10s %15s %20s %20s", "$probe_name", "$chromosome", "$start", "$stop", "$strand", "$id", "$T1_exp\n";
			}	
		}
		## otherwise, we are filtering the second treatment
		else
		{
			## if the fold-change for the second treatment is equal to or falls in between the user-provided thresholds	
			if($T2_exp >= $lower_threshold && $T2_exp <= $higher_threshold)
			{
				## print the line to the output file
				printf OUTFILE "%-15s %-10s %-15s %15s %10s %20s %20s", "$probe_name", "$chromosome", "$start", "$stop", "$strand", "$id", "$T2_exp\n";
			}
		}
	}
}